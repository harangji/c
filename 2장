# 알고리즘 구현을 위해 필요한 C 문법 이해하기

$ 기초구조
int 정수, float / double 실수, char 문자

$ 구조체
struct student{ int kor }
struct student a, b, c ;
a.kor= 30 ;

$ 포인터 변수
- 포인터 변수는 주소를 값으로 가진다.
- 값 대입 예시 -> 

int a=3
int *p // * -> 간접연산자 *, p는 포인터 변수이다.
p= &a; // & -> 주소연산자 &
printf("%d", *p);

$ 배열을 포인터로 선언 할 때
int data[10]={1,2,3,4,5}
int *p= data; // 0번 방 주소
p= p+1; // 다음 방 주소

$ 배열 이름은 "그 배열의 시작 주소" 이다. 따라서 주소연산자 & 가 필요없다. 
data= data+1 로 변경이 불가한 고정값이다.

$ 동적 할당 malloc
- 회원관리 프로그램을 만들 때에 몇 명의 회원이 등록하게 될지 알 수 없는 상황이 생긴다.
- 미리 메모리 용량을 고정시키면 문제가 생길 것이다.
- 동적할당이란, 프로그램 실행 시에 필요한 만큼의 메모리를 운영체제로부터 할당받아 필요한 만큼의 메모리를 사용할 수
있게 해주는 기능이다.
- 필요한 메모리만큼 사용 가능, 메모리 낭비 x
- malloc는 시스템 함수로서 실행되면 메모리를 할당해 주게 된다.
i= ( 자료형 * ) malloc ( 할당할 길이 ) ;





